//
//  UsersPresenterTests.swift
//  CleanSwiftSample
//
//  Created by Parveen Bhatia on 3/27/18.
//  Copyright (c) 2018 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CleanSwiftSample
import XCTest

class UsersPresenterTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: UsersPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupUsersPresenter()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupUsersPresenter()
    {
        sut = UsersPresenter()
    }
    
    // MARK: Test doubles
    
    class UsersDisplayLogicSpy: UsersDisplayLogic
    {
        var displayUserListCalled = false
        var displayErrorCalled = false
        
        
        func displayUserList(viewModel: Users.ViewModel) {
            displayUserListCalled = true
        }
        
        func displayError(with message: String) {
            displayErrorCalled = true
        }
        
    }
    
    // MARK: Tests
    
    func testPresentUserList()
    {
        // Given
        let spy = UsersDisplayLogicSpy()
        sut.viewController = spy
        
        // When
        sut.presentUserList(with: Users.Response(users: []))
        
        // Then
        XCTAssertTrue(spy.displayUserListCalled, "presentUserList(response:) should ask the view controller to display the user list")
    }
    
    func testPresentError()
    {
        // Given
        let spy = UsersDisplayLogicSpy()
        sut.viewController = spy
        let error  = NSError(domain:"Unknown", code:-10, userInfo:nil) as Error
        
        // When
        sut.presentError(error)
        
        // Then
        XCTAssertTrue(spy.displayErrorCalled, "presentError should ask the view controller to display error alert")
    }

}
